class Solution {
    public int minIncrementForUnique(int[] arr) {
        if(arr == null || arr.length <= 1) {
            return 0;
        }
        Queue<Integer> q = new LinkedList<>();
        Arrays.sort(arr);
        int ans = 0;
        for(int i = 0; i < arr.length; i++) {
          if(i == 0 || arr[i-1] != arr[i]) {
              if(q.isEmpty()) continue;
              else {
                  int offset = arr[i - 1];
                  while((offset + 1) < arr[i] && (!q.isEmpty())) {
                      ans += (offset - q.peek() + 1);
                      q.poll();
                      offset++;
                  }
              }
          } else {
              q.add(arr[i]);
          }
        }
        int offset = arr[arr.length - 1];
        while(!q.isEmpty()) {
            ans += (offset - q.peek() + 1);
            q.poll();
            offset++;
        }
        return ans;
    }
}
